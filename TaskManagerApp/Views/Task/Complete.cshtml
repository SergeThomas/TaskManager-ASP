@model TaskMan

<form method="post" asp-action="Complete">  @* adding explicit action *@
    @Html.HiddenFor(model => model.TaskNumber)      @* this tag allowed files to be edited since form does not send object id *@
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">Mark Task as Complete</h2>
            <hr />
        </div>
        <div class="mb-3" >
            <label asp-for="AssignedUser">User Name</label>
            <input asp-for="AssignedUser" disabled class="form-control" />
        </div>
        <div class="mb-3">
            <label asp-for="TaskDetails"></label>
            <input asp-for="TaskDetails" disabled class="form-control" />
        </div>
        <div class="mb-3">
            <label asp-for="DueDate"></label>
            <input asp-for="DueDate" disabled class="form-control" type="date"/>
        </div>
        <div class="mb-3">
            <label asp-for="DueDate"></label>
            <input asp-for="DueDate" class="form-control" type="date"/>
        </div>
        <div class="mb-3">
            <label asp-for="CompletionStatus" hidden></label>
            <input asp-for="CompletionStatus" class="form-control" type="hidden"/>
            <span asp-validation-for="CompletionStatus" class="text-danger"></span>
        </div>
        @if (Model.CompletionStatus != true){
            <button type="submit" class="btn btn-danger" style="width:150px">Complete</button>
        }
        else
        {
            <button onclick="myFunction()" type="submit" class="btn btn-danger" style="width:150px">Complete</button>
        }
        <a asp-controller="Task" asp-action="Index" class="btn btn-info" style="width:150px">
            Back to List
        </a>
    </div>
</form>

@* adding client side validation as better alternative *@

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial"/>
    }
}